var $jq = jQuery.noConflict();
var collaboratortool = angular.module('timetable', ['ngCookies','ui.bootstrap','ngRoute']).config(function($httpProvider, $interpolateProvider) {
   $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'; 
   $interpolateProvider.startSymbol('{$');
   $interpolateProvider.endSymbol('$}');
});

// angular bootstrap modal----------------------------

var addEventModal = function($scope, $modal) {

  $scope.open = function () {

    var modalInstance = $modal.open({
      templateUrl: 'myModalContent.html',
      controller: 'ModalInstanceCtrl'
      
    });
  };
};

var ModalInstanceCtrl = function ($scope, $modalInstance) {

  $scope.ok = function () {
    $modalInstance.close();
  };

  $scope.cancel = function () {
    $modalInstance.dismiss('cancel');
  };
};

// end of angular bootstrap modal -------------------

collaboratortool.controller('timetable_ctrl', function($scope, $http, $cookies,$route, $routeParams, $location, $window) {

	$scope.doesExistInDatabase = function(days){		
		//for(var i=0; i < days.length; i++){
		//	if (day[i].id <0){
		//		displaycross.push = "<button type='submit' class='btn btn-default'> <span class='glyphicon glyphicon-remove'></span> </button>";
		//	}
		//	else{
		//		displaycross.push = "";
		//	}
			
		//}
		// var displaycross = $sce.trustAsHtml("<button type='submit' class='btn btn-default'> <span class='glyphicon glyphicon-remove'></span> </button>");
		//$scope.displaycross = displaycross;
	};
	/**********************************************************************************************************************************************************
	/
	/							READ COMMENTS - CODE STARTS HERE :) - some code commented to allow for hard coded data to work - needs replacing though the logic is in place
	/
	/**********************************************************************************************************************************************************************************************/
	// var buildEvent= function (name, startTime, endTime, title) {
	// 	return {
	// 		name: name,
	// 		start: startTime, //these will probaly need to be formatted to match the correct date time format (most likely change the database type to datetime of use data object based on hour acquired)
	// 		end: endTime, //Data from db is currently on a time however the weekly view still relates to a specific date so the data needs to be modified (either in db or here) to have the date.
	// 		title: title, //eg a wednesday slot at 11 am would become a 11am slot on the 17th of december.
	// 	};
	// }
			
	$scope.loadItems = function(){
		//hide the modal button --- can remove
		$jq('#openmodal').hide();

		$http.get('/api/v1/timetable/').then(function(response){
			var items = response.data;
			var eventList= [];

			var date = new Date();

			//-----LOOP Through items in data and sendts info to build event--------
			 for (var i=0; i<items.length; i++) {
			 	var event1 = {"id": items[i].id,
			 				"title": items[i].title,
			 				"description": items[i].description, 
			 				"start": items[i].start, 
			 				"end": items[i].end, 
			 				"allDay": items[i].allDay, 
			 				"user": items[i].user
			 			};
			 	eventList.push(event1); //add all event to events array YOU THEN NEED TO ADD THAT TO THE FULLCALENDAR FUNCTION INSTEAD OF THE HARD CODED DATA
			 }

			$jq('#calendar').fullCalendar({

				defaultDate: date, //'2014-11-12', //should be autogenerated to today
				header: {
					left: 'prev,next today',
					center: 'title',
					right: 'month,agendaWeek,agendaDay'
				},
				/*
					defaultView option used to define which view to show by default,
					for example we have used agendaWeek.
				*/
				defaultView: 'agendaWeek', //this is responsible for displaying the weekly view needed
				/*
					selectable:true will enable user to select datetime slot
					selectHelper will add helpers for selectable.
				*/
				selectable: true,
				selectHelper: true,

				//all the event in the database
				events: eventList,

				//allow user to add an event ----------------------------------------------------------
				select: function(start, end, allDay) {
			
					// prompt the user to input the following information
					var title1 = prompt('Title') + " - " + $jq('#loginUserName').text();
					var description1 = (title1 != null) ? prompt('Description') : null;
					
					if(title1 != null && description1!=null){

						//add the event
						$http({
							 method: 'POST',
							 url: '/api/v1/timetable/', 
							 headers: {
							 	'X-CSRFToken': $cookies.csrftoken
							 },
							 data: {
						        "title": title1, 
						        "description": description1, 
						        "start": start, 
						        "end": end, 
						        "allDay": false, 
						        "user": $jq('#loginUserID').text()
							}
						}). success(function(data, status, headers, config) {
						    	// refresh the page
						    	$window.location.reload();
						}). error(function(data, status, headers, config) {
								//console.log('fail');
						    	//console.log($cookies.csrftoken); 	
						});

						//unselect the event
						$jq('#calendar').fullCalendar('unselect');
					}

				},

				//remove an event ----------------------------------------------------------

				eventClick: function(calEvent, jsEvent, view) {

					var eventID = calEvent.id; //get the id of the event clicked

					//start
					$jq( "#dialog" ).dialog({
		                  resizable: false,
		                  height:150,
		                  width:500,
		                  modal: true,
		                  title: 'Do you want to delete this event?',
		                  buttons: {
		                             CLOSE: function() {
		                                 $jq("#dialog").dialog( "close" );
		                             },
		                             "DELETE": function() {
		                                //delete the event from the database
		                          		
		                          		 $http({
										   method: 'DELETE',
										   url: '/api/v1/timetable/' + eventID, 
										   headers: {
										    'X-CSRFToken': $cookies.csrftoken
										   }
										  }).
										  success(function(data, status, headers, config) {
										      console.log('Task was successfully deleted from the Database');
										      // refresh the page
										      $window.location.reload(); 
										  }).
										  error(function(data, status, headers, config) {
										      //console.log($cookies.csrftoken);
										  });

		                          		//end

		                          		$jq("#dialog").dialog( "close" );
		                             }
		                           }
		             });

					//end

				}

			});

		});

	};
	// $scope.updateItem = function(data){
	// 	$http.put('/api/update/').then(function($scope.days){
	// 	});
	// }
	$scope.loadItems();
	//$scope.doesExistInDatabase($scope.days);

	/**********************************************************************************************************************************************************
	/
	/										IF LOST, CONFUSED OR IN NEED OF GUIDANCE - CONTACT RICH..!!
	/							Appointment hours - any. Avaliable now - next monday! Then around a week after that!
	/
	/**********************************************************************************************************************************************************************************************/
});





